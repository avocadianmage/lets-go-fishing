@import 'assets/nord.css';
:root {
    --card-width: 244px;
    --card-height: 340px;
    --zone-padding: 6px;
    --zone-border-width: 2px;
}

html,
body,
#root {
    height: 100%;
    overflow: hidden;
}

body {
    background-color: #121212;
    color: var(--nord6);
}

h1,
h4 {
    text-transform: uppercase;
    user-select: none;
}

h1 {
    font-size: 1.5em;
    color: var(--nord4);
}

h6 {
    font-size: 0.8em;
}

/**************/
/* Animations */
/**************/

@keyframes wiggle {
    0% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(10px);
    }
    50% {
        transform: translateX(0px);
    }
    75% {
        transform: translateX(10px);
    }
    100% {
        transform: translateX(0);
    }
}

.wiggle {
    animation: wiggle 0.2s;
    animation-iteration-count: 1.5;
}

@keyframes verticalWave {
    0% {
        transform: translateY(-25%);
    }
    50% {
        transform: translateY(25%);
    }
    100% {
        transform: translateY(-25%);
    }
}

.verticalWave {
    animation: verticalWave 1s ease-in-out infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(-360deg);
    }
}

.spin {
    animation: spin 1s linear infinite;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
}

/***************/
/* Page layout */
/***************/

.gameLayout {
    display: flex;
    flex-flow: column;
    height: calc(100% - 6px);
    margin: 2px;
}

.zone {
    font-family: 'Bahnschrift Condensed', 'Arial Narrow Bold', sans-serif;
    font-size: 60px;
    writing-mode: vertical-lr;
}

.zone.highlight {
    box-shadow: 0 0 0 calc(var(--zone-border-width) * 2) var(--nord3);
    transition: box-shadow 0.15s;
}

.zone::after {
    content: attr(data-name);
    color: #454545;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    text-align: center;
}

#hand, #battlefield {
    flex: 1;
}

#graveyard, #exile, #library {
    width: var(--card-width);
}

#lefter, #command {
    width: calc(var(--card-width) * 1.5);
}

/********/
/* Card */
/********/

.card-drag-layer {
    width: var(--card-width);
    height: var(--card-height);
    display: inline-block;
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none;
}

.card-position-layer {
    width: inherit;
    height: inherit;
    display: inherit;
    position: inherit;
}

.card {
    width: var(--card-width);
    height: var(--card-height);
    position: relative;
    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.5);
    border-bottom-left-radius: 4.75% 3.5%;
    border-bottom-right-radius: 4.75% 3.5%;
    border-top-left-radius: 4.75% 3.5%;
    border-top-right-radius: 4.75% 3.5%;
    background-size: contain;
    background-blend-mode: darken;
    background-color: rgba(0, 0, 0, 0.01);
    transition: background-color 0.2s, transform 0.15s;
    pointer-events: all;
}

.card.tapped {
    transform: rotate(90deg);
}

.card .card-face {
    width: inherit;
    height: inherit;
    display: inline-block;
    position: absolute;
    background-image: inherit;
    background-size: inherit;
    background-blend-mode: inherit;
    background-color: rgba(0, 0, 0, 0.01);
    border-radius: inherit;
    overflow: hidden;
    transition: transform 0.2s, opacity 0.2s;
    pointer-events: none;
}

.stack-zone .card-position-layer {
    transition: transform 0.1s;
}

.stack-zone .card-drag-layer:not(.react-draggable-dragging) .card.previewing:hover .card-face {
    animation: fadeIn 0.2s;
}

.stack-zone:not(.vertical) .card-drag-layer:not(.react-draggable-dragging) .card.previewing:hover .card-face {
    top: -100%;
}

.stack-zone.vertical .card-drag-layer:not(.react-draggable-dragging) .card.previewing:hover .card-face {
    left: -100%;
}
